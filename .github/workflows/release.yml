name: Release Creation

on:
  release:
    types: [published]

permissions: # added using https://github.com/step-security/secure-workflows
  contents: read

jobs:
  build:
    permissions:
      contents: write # for ncipollo/release-action to create a release
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0a5820a2ec510d2521c1715d24860fc8cd06400a
        with:
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - uses: actions/checkout@bf085276cecdb0cc76fbbe0687a5a0e786646936

      # Substitute the Manifest and Download URLs in the module.json
      - name: Substitute Manifest and Download Links For Versioned Ones
        run: |
          cat ./public/module.json | jq '.version="${{ github.event.release.tag_name }}" | .url="https://github.com/${{github.repository}}" | .manifest="https://github.com/${{github.repository}}/releases/latest/download/module.json" | .download="https://github.com/${{github.repository}}/releases/download/${{github.event.release.tag_name}}/module.zip"' > ./public/module.json.tmp 
          rm ./public/module.json 
          mv ./public/module.json.tmp ./public/module.json
      - run: cat ./public/module.json
      - name: Install
        uses: actions/setup-node@d1b197b965eb46e1a1878caad41c4ab3efae133f
        with:
          node-version: 18

      - run: yarn install
      - name: build
        run: yarn build

      # Create a zip file with all files required by the module to add to the release
      - run: (cd dist && zip -r ../module.zip *)

      - run: zip -ur module.zip LICENSE README.md

      # Create a release for this specific version
      - name: Update Release with Files
        id: create_version_release
        uses: ncipollo/release-action@a2e71bdd4e7dab70ca26a852f29600c98b33153e
        with:
          allowUpdates: true # Set this to false if you want to prevent updating existing releases
          name: ${{ github.event.release.name }}
          draft: ${{ github.event.release.unpublished }}
          prerelease: ${{ github.event.release.prerelease }}
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: './dist/module.json, ./module.zip'
          tag: ${{ github.event.release.tag_name }}
          body: ${{ github.event.release.body }}
