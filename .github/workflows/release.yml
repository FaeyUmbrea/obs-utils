name: Release Creation

on: 
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@2e205a28d0e1da00c5f53b161f4067b052c61f34
      with:
        egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

    - uses: AutoModality/action-clean@492b2d2e2e77247bfd0b17eaa89a371b2f3430ee
    - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8

    # get part of the tag after the `v`
    - name: Extract tag version number
      id: get_version
      uses: battila7/get-version-action@d681662789c541f0777208c1f0e82f255f70b28d

    # Substitute the Manifest and Download URLs in the module.json
    - name: Substitute Manifest and Download Links For Versioned Ones
      id: sub_manifest_link_version
      uses: microsoft/variable-substitution@6287962da9e5b6e68778dc51e840caa03ca84495
      with:
        files: 'public/module.json'
      env:
        version: ${{steps.get_version.outputs.version-without-v}}
        url: https://github.com/${{github.repository}}
        manifest: https://github.com/${{github.repository}}/releases/latest/download/module.json
        download: https://github.com/${{github.repository}}/releases/download/${{github.event.release.tag_name}}/module.zip
    - name: Install
      uses: actions/setup-node@00e1b6691b40cce14b5078cb411dd1ec7dab07f7
      with:
        node-version: 16
      
    - run: yarn install
    - name: build
      run: yarn build

    # Create a zip file with all files required by the module to add to the release
    - run: (cd dist && zip -r ../module.zip *)
    
    - run: zip -ur module.zip LICENSE README.md

    # Create a release for this specific version
    - name: Update Release with Files
      id: create_version_release
      uses: ncipollo/release-action@4c75f0f2e4ae5f3c807cf0904605408e319dcaac
      with:
        allowUpdates: true # Set this to false if you want to prevent updating existing releases
        name: ${{ github.event.release.name }}
        draft: ${{ github.event.release.unpublished }}
        prerelease: ${{ github.event.release.prerelease }}
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: './dist/module.json, ./module.zip'
        tag: ${{ github.event.release.tag_name }}
        body: ${{ github.event.release.body }}
